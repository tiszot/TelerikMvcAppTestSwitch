
@{
    ViewBag.Title = "Home Page";
}

<style>
    .k-footer-template {
        display: none;
    }

    .k-card-header {
        flex: 0 0 auto;
    }

    .k-card-body {
        overflow: hidden;
    }
</style>

<!-- container text templates -->
<script id="total-streams-template" type="text/x-kendo-template">
    <h2 id="total-streams"></h2>
</script>
<script id="total-downloads-template" type="text/x-kendo-template">
    <h2 id="total-downloads"></h2>
</script>
<script id="reach-template" type="text/x-kendo-template">
    <h2 id="total-reach"></h2>
</script>
<script id="revenue-template" type="text/x-kendo-template">
    <h2 id="total-revenue"></h2>
</script>

<!-- container chart templates -->
<script id="downloads-chart-template" type="text/x-kendo-template">
    @(Html.Kendo().Chart()
        .Name("downloads")
        // to configure the chart theme to match the application theme use the theme setting
        // https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart/configuration/theme
        //.Theme("sass")  _
        .Series(s=>s.Line("Downloads", categoryMemberName: "Date"))
        .Legend(l=>l.Visible(false))
        .CategoryAxis(c=>
            c.Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .Labels(l => l.Format("{0:d MMM}").Rotation("auto"))
            .MajorGridLines(mg => mg.Visible(false))
            .MajorTicks(mt => mt.Visible(false))
        )
        .ValueAxis(v=>v.Numeric().Min(1000).Max(16000).Labels(l => l.Step(4)))
        .DataSource("dateChartDataSource")
        .HtmlAttributes(new { style = "height:100%;width:100%;" })
        .ToClientTemplate()
    )
</script>
<script id="performance-chart-template" type="text/x-kendo-template">
    @(Html.Kendo().Chart()
        .Name("performance")
        // to configure the chart theme to match the application theme use the theme setting
        // https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart/configuration/theme
        //.Theme("sass")  _
        .AutoBind(false)
        .Series(s=>s.Column("Views", categoryMemberName: "Date"))
        .Legend(l=>l.Visible(false))
        .CategoryAxis(c=>
            c.Date()
            .BaseUnit(ChartAxisBaseUnit.Fit)
            .Labels(l => l.Format("{0:d MMM}").Rotation("auto"))
            .MajorGridLines(mg => mg.Visible(false))
            .MajorTicks(mt => mt.Visible(false))
        )
        .ValueAxis(v => v.Numeric().Min(4000).Max(30000).Labels(l=>l.Step(3)))
        .DataSource("dateChartDataSource")
        .HtmlAttributes(new { style = "height:100%;width:100%;" })
        .ToClientTemplate()
    )
</script>
<script>
    function donutCategoryLabels(e) {
        return new kendo.drawing.Text(e.category, e.rect.origin);
    }
</script>

<script id="apps-chart-template" type="text/x-kendo-template">
    @(Html.Kendo().Chart()
        .Name("devices")
        // to configure the chart theme to match the application theme use the theme setting
        // https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart/configuration/theme
        //.Theme("sass")  _
        .Series(s=>s.Donut("Views", "Device")
            .AutoFit()
            .Labels(labels => labels
            .Visible(true)
            .Visual("donutCategoryLabels")
            .Position(ChartPieLabelsPosition.OutsideEnd)
            )
        )
        .Legend(l=>l.Visible(false))
        .DataSource(d=>d.Read("Devices_Read", "Dashboard"))
        .HtmlAttributes(new { style = "height:100%;width:100%;" })
        .ToClientTemplate()
    )
</script>

<script id="platforms-chart-template" type="text/x-kendo-template">
    @(Html.Kendo().Chart<TelerikMvcAppTestSwitch.Models.PodcastViewModel>()
        .Name("platforms")
        // to configure the chart theme to match the application theme use the theme setting
        // https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart/configuration/theme
        //.Theme("sass")  _
        .Series(s=>
            s.Donut(model => model.Views, model => model.PlatformName)
            .AutoFit()
            .Labels(labels => labels
            .Visible(true)
            .Visual("donutCategoryLabels")
            .Position(ChartPieLabelsPosition.OutsideEnd)
          )
        )
        .DataSource(d => d.Read("Platforms_Read", "Dashboard"))
        .Legend(l=>l.Visible(false))
        .HtmlAttributes(new { style = "height:100%;width:100%;" })
        .ToClientTemplate()
    )
</script>

<!-- container grid template -->
<script id="grid-template" type="text/x-kendo-template">
    @(Html.Kendo().Grid<TelerikMvcAppTestSwitch.Models.PodcastViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.Name).Title("Podcast Episode").Width(320);
            columns.Bound(p => p.Streams).Width(150);
            columns.Bound(p => p.Downloads).Width(250);
        })
        .Sortable()
        .Scrollable(s=>s.Height("auto"))
        .HtmlAttributes(new { style = "height:100%;" })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(5)
            .Sort(s=>s.Add(f=>f.Streams).Descending())
            .Read("Podcasts_Read", "Dashboard")
            .Aggregates(a =>
            {
                a.Add(f => f.Downloads).Sum();
                a.Add(f => f.Streams).Sum();
                a.Add(f => f.Reach).Sum();
                a.Add(f => f.Views).Sum();
            })
        )
        .Events(e=>e.DataBound("populateTotals"))
        .ToClientTemplate()
     )
</script>

<div class="d-flex justify-content-center">
    @(Html.Kendo().DataSource<TelerikMvcAppTestSwitch.Models.PodcastViewModel>()
        .Name("dateChartDataSource")
        .Custom(d=>
         d.Transport(t => t.Read("Downloads_Read", "Dashboard"))
        )
    )

    @(Html.Kendo().TileLayout()
            .Name("tilelayout")
            .Columns(4)
            .RowsHeight("145px")
            .ColumnsWidth("350px")
            .Containers(c => {
                c.Add().Header(h => h.Text("Total Streams")).BodyTemplateId("total-streams-template").ColSpan(1).RowSpan(1);
                c.Add().Header(h => h.Text("Total Downloads")).BodyTemplateId("total-downloads-template").ColSpan(1).RowSpan(1);
                c.Add().Header(h => h.Text("Reach")).BodyTemplateId("reach-template").ColSpan(1).RowSpan(1);
                c.Add().Header(h => h.Text("Revenue")).BodyTemplateId("revenue-template").ColSpan(1).RowSpan(1);
                c.Add().Header(h => h.Text("Weekly Recap-Downloads")).BodyTemplateId("downloads-chart-template").ColSpan(2).RowSpan(3);
                c.Add().Header(h => h.Text("Performance Trend")).BodyTemplateId("performance-chart-template").ColSpan(2).RowSpan(3);
                c.Add().Header(h => h.Text("Top 5 Episodes")).BodyTemplateId("grid-template").ColSpan(4).RowSpan(2);
                c.Add().Header(h => h.Text("Listening platforms-Apps")).BodyTemplateId("apps-chart-template").ColSpan(2).RowSpan(2);
                c.Add().Header(h => h.Text("Listening platforms-Devices")).BodyTemplateId("platforms-chart-template").ColSpan(2).RowSpan(2);
            })
            .Reorderable(true)
            .Resizable(true)
            .Events(e=>e.Resize("onTileResize"))
        )
    <script>
        function onTileResize(e) {
            var container = e.item || e.container;
            if (container) {

                // for widgets that do not auto resize
                // https://docs.telerik.com/kendo-ui/styles-and-layout/using-kendo-in-responsive-web-pages
                kendo.resize(container, true);
            }
        }

        function populateTotals(e) {
            // we are using the aggregates of the grid to populate our totals
            var aggregates = e.sender.dataSource.aggregates();

            $("#total-streams").html(kendo.toString(aggregates.Streams.sum, "n0"));
            $("#total-downloads").html(kendo.toString(aggregates.Downloads.sum, "n0"));
            $("#total-reach").html(kendo.toString(aggregates.Reach.sum, "n0"));
            $("#total-revenue").html(kendo.toString(aggregates.Views.sum / 100, "c0"));
        }
    </script>
</div>

